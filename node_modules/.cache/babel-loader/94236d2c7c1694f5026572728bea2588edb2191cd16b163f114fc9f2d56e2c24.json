{"ast":null,"code":"var _jsxFileName = \"E:\\\\SET Year 3\\\\Sem2\\\\AdvancedWebFrameworks\\\\Assignmnents\\\\mDremo5093_A1\\\\mdremo5093_a1\\\\src\\\\components\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Button from './Button';\nimport RedditData from './RedditData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = _ref => {\n  _s();\n  let {\n    title\n  } = _ref;\n  const [subRedditName, setSubRedditName] = useState('');\n  const [inputName, setInputName] = useState('');\n  const [likedRedditPosts, setLikedRedditPosts] = useState([]);\n  const [ShowFetchPage, setFetchPage] = useState(true);\n  const click = () => {\n    setSubRedditName(inputName);\n  };\n  const change = event => {\n    setInputName(event.target.value);\n  };\n  const changePage = () => {\n    setFetchPage(!ShowFetchPage);\n    setInputName('');\n    setSubRedditName('');\n  };\n  const addToLikedPosts = post => {\n    setLikedRedditPosts(prevLikedRedditPosts => {\n      const newLikedRedditPosts = prevLikedRedditPosts.concat(post);\n      localStorage.setItem('likedRedditPostIds', JSON.stringify(newLikedRedditPosts.map(post => post.id)));\n      return newLikedRedditPosts;\n    });\n  };\n  const removeLikedPost = postId => {\n    setLikedRedditPosts(prevLikedRedditPosts => prevLikedRedditPosts.filter(post => post.id !== postId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ShowFetchPage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Header-Content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"Title-Header\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: change,\n          type: \"text\",\n          className: \"Search-Box\",\n          placeholder: \"Enter a subreddit\",\n          value: inputName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          classN: 'Search-Button',\n          text: \"Retrieve top 10 posts\",\n          colour: \"red\",\n          onClick: click\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          classN: 'Liked-Posts-Button',\n          text: \"Show liked Posts\",\n          colour: \"white\",\n          onClick: changePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Reddit-Content\",\n        children: subRedditName && /*#__PURE__*/_jsxDEV(RedditData, {\n          subRedditName: subRedditName,\n          likedRedditPosts: addToLikedPosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"Liked-Posts-Button\",\n        text: \"Fetch More Reddit Posts\",\n        colour: \"white\",\n        onClick: changePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Reddit-Content\",\n        children: likedRedditPosts.map(likedRedditPosts => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reddit-post\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Post Name: \", likedRedditPosts.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this), likedRedditPosts.thumbnail !== 'self' ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: likedRedditPosts.thumbnail,\n            alt: likedRedditPosts.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: likedRedditPosts.selftext\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Remove-Liked-Post\",\n            onClick: removeLikedPost,\n            children: \"Remove from Liked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this)]\n        }, likedRedditPosts.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Header, \"ArUElAhYqMnQvD5F7BWEh6V+3L0=\");\n_c = Header;\nHeader.defaultProps = {\n  title: 'Reddit Hotness Grabber'\n};\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useState","Button","RedditData","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","_ref","_s","title","subRedditName","setSubRedditName","inputName","setInputName","likedRedditPosts","setLikedRedditPosts","ShowFetchPage","setFetchPage","click","change","event","target","value","changePage","addToLikedPosts","post","prevLikedRedditPosts","newLikedRedditPosts","concat","localStorage","setItem","JSON","stringify","map","id","removeLikedPost","postId","filter","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","classN","text","colour","onClick","thumbnail","src","alt","selftext","_c","defaultProps","$RefreshReg$"],"sources":["E:/SET Year 3/Sem2/AdvancedWebFrameworks/Assignmnents/mDremo5093_A1/mdremo5093_a1/src/components/Header.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Button from './Button'\r\nimport RedditData from './RedditData';\r\n\r\nconst Header = ({title}) => {\r\n    const [subRedditName, setSubRedditName] = useState('');\r\n    const [inputName, setInputName] = useState('');\r\n    \r\n    const [likedRedditPosts, setLikedRedditPosts] = useState([]);\r\n    \r\n    const [ShowFetchPage, setFetchPage] = useState(true);\r\n    \r\n\r\n    const click = () =>{\r\n        setSubRedditName(inputName)\r\n    }\r\n\r\n    const change = event => {\r\n        setInputName(event.target.value)\r\n    }\r\n\r\n    const changePage = () => {\r\n        setFetchPage(!ShowFetchPage);\r\n        setInputName('');\r\n        setSubRedditName('');\r\n    }\r\n\r\n    const addToLikedPosts = (post) => {\r\n        setLikedRedditPosts((prevLikedRedditPosts) => {\r\n            const newLikedRedditPosts = prevLikedRedditPosts.concat(post);\r\n            localStorage.setItem('likedRedditPostIds', JSON.stringify(newLikedRedditPosts.map(post => post.id)));\r\n            return newLikedRedditPosts;\r\n          });\r\n      };\r\n      \r\n      const removeLikedPost = (postId) => {\r\n        setLikedRedditPosts((prevLikedRedditPosts) =>\r\n          prevLikedRedditPosts.filter((post) => post.id !== postId)\r\n        );\r\n      };\r\n\r\n    return(\r\n        <div>\r\n            {ShowFetchPage ? (\r\n                <div className='header'> \r\n                <div className='Header-Content'>\r\n                    <h1 className='Title-Header'>{title}</h1>           \r\n                    <input \r\n                    onChange={change}\r\n                    type=\"text\" \r\n                    className='Search-Box' \r\n                    placeholder='Enter a subreddit'\r\n                    value={inputName}\r\n                    />\r\n                    <Button classN={'Search-Button'} text={\"Retrieve top 10 posts\"} colour={\"red\"} onClick={click}/>\r\n                    <Button classN={'Liked-Posts-Button'} text={\"Show liked Posts\"} colour={\"white\"} onClick={changePage}/>\r\n                </div>\r\n                    <div className='Reddit-Content'>\r\n                        {subRedditName && <RedditData subRedditName={subRedditName} likedRedditPosts={addToLikedPosts} />}\r\n                    </div>\r\n            </div>\r\n            ) : (\r\n                <>\r\n                     <Button className='Liked-Posts-Button'text={\"Fetch More Reddit Posts\"} colour={\"white\"} onClick={changePage}/>\r\n                     <div className='Reddit-Content'>\r\n                        {likedRedditPosts.map(likedRedditPosts => (\r\n                            <div key={likedRedditPosts.id} className='reddit-post'>\r\n                                <h3>Post Name: {likedRedditPosts.title}</h3>   \r\n                                {likedRedditPosts.thumbnail !== 'self' ? (\r\n                                <img src={likedRedditPosts.thumbnail} alt={likedRedditPosts.title}></img>\r\n                                ): (\r\n                                    <p>{likedRedditPosts.selftext}</p>\r\n                                )}\r\n                                <button className='Remove-Liked-Post' onClick={removeLikedPost}>Remove from Liked</button>                      \r\n                            </div>\r\n                        ))}\r\n                     </div>\r\n                </>\r\n            )}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nHeader.defaultProps={\r\n    title: 'Reddit Hotness Grabber'\r\n}\r\nexport default Header;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}