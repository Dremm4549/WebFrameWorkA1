{"ast":null,"code":"var _jsxFileName = \"E:\\\\SET Year 3\\\\Sem2\\\\AdvancedWebFrameworks\\\\Assignmnents\\\\mDremo5093_A1\\\\mdremo5093_a1\\\\src\\\\components\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Button from './Button';\nimport RedditData from './RedditData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = _ref => {\n  _s();\n  let {\n    title\n  } = _ref;\n  const [subRedditName, setSubRedditName] = useState('');\n  const [inputName, setInputName] = useState('');\n  const [likedRedditPosts, setLikedRedditPosts] = useState(() => {\n    const storedLikedRedditPosts = JSON.parse(localStorage.getItem('likedRedditPosts')) || [];\n    return storedLikedRedditPosts;\n  });\n  const [ShowFetchPage, setFetchPage] = useState(true);\n  const click = () => {\n    setSubRedditName(inputName);\n  };\n  const change = event => {\n    setInputName(event.target.value);\n  };\n  const changePage = () => {\n    setFetchPage(!ShowFetchPage);\n    setInputName('');\n    setSubRedditName('');\n  };\n  const addToLikedPosts = post => {\n    setLikedRedditPosts(prevLikedRedditPosts => {\n      const newLikedRedditPosts = prevLikedRedditPosts.concat(post);\n      localStorage.setItem('likedRedditPosts', JSON.stringify(newLikedRedditPosts));\n      return newLikedRedditPosts;\n    });\n  };\n  const removeLikedPost = postId => {\n    setLikedRedditPosts(prevLikedRedditPosts => prevLikedRedditPosts.filter(post => post.id !== postId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ShowFetchPage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Header-Content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"Title-Header\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: change,\n          type: \"text\",\n          className: \"Search-Box\",\n          placeholder: \"Enter a subreddit\",\n          value: inputName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          classN: 'Search-Button',\n          text: 'Retrieve top 10 posts',\n          colour: 'red',\n          onClick: click\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          classN: 'Liked-Posts-Button',\n          text: 'Show liked Posts',\n          colour: 'white',\n          onClick: changePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Reddit-Content\",\n        children: subRedditName && /*#__PURE__*/_jsxDEV(RedditData, {\n          subRedditName: subRedditName,\n          likedRedditPosts: addToLikedPosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"Liked-Posts-Button\",\n        text: 'Fetch More Reddit Posts',\n        colour: 'white',\n        onClick: changePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Reddit-Content\",\n        children: likedRedditPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reddit-post\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Post Name: \", post.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Post ID: \", post.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), post.thumbnail !== 'self' ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.thumbnail,\n            alt: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.selftext\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Remove-Liked-Post\",\n            onClick: () => removeLikedPost(post.id),\n            children: \"Remove from Liked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"xvejYfeAY+t433uLrPj8ymRiq54=\");\n_c = Header;\nHeader.defaultProps = {\n  title: 'Reddit Hotness Grabber'\n};\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useState","Button","RedditData","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","_ref","_s","title","subRedditName","setSubRedditName","inputName","setInputName","likedRedditPosts","setLikedRedditPosts","storedLikedRedditPosts","JSON","parse","localStorage","getItem","ShowFetchPage","setFetchPage","click","change","event","target","value","changePage","addToLikedPosts","post","prevLikedRedditPosts","newLikedRedditPosts","concat","setItem","stringify","removeLikedPost","postId","filter","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","classN","text","colour","onClick","map","thumbnail","src","alt","selftext","_c","defaultProps","$RefreshReg$"],"sources":["E:/SET Year 3/Sem2/AdvancedWebFrameworks/Assignmnents/mDremo5093_A1/mdremo5093_a1/src/components/Header.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Button from './Button';\r\nimport RedditData from './RedditData';\r\n\r\nconst Header = ({ title }) => {\r\n  const [subRedditName, setSubRedditName] = useState('');\r\n  const [inputName, setInputName] = useState('');\r\n\r\n  const [likedRedditPosts, setLikedRedditPosts] = useState(() => {\r\n    const storedLikedRedditPosts = JSON.parse(\r\n      localStorage.getItem('likedRedditPosts')\r\n    ) || [];\r\n    return storedLikedRedditPosts;\r\n  });\r\n\r\n  const [ShowFetchPage, setFetchPage] = useState(true);\r\n\r\n  const click = () => {\r\n    setSubRedditName(inputName);\r\n  };\r\n\r\n  const change = (event) => {\r\n    setInputName(event.target.value);\r\n  };\r\n\r\n  const changePage = () => {\r\n    setFetchPage(!ShowFetchPage);\r\n    setInputName('');\r\n    setSubRedditName('');\r\n  };\r\n\r\n  const addToLikedPosts = (post) => {\r\n    setLikedRedditPosts((prevLikedRedditPosts) => {\r\n      const newLikedRedditPosts = prevLikedRedditPosts.concat(post);\r\n      localStorage.setItem(\r\n        'likedRedditPosts',\r\n        JSON.stringify(newLikedRedditPosts)\r\n      );\r\n      return newLikedRedditPosts;\r\n    });\r\n  };\r\n\r\n  const removeLikedPost = (postId) => {\r\n    setLikedRedditPosts((prevLikedRedditPosts) =>\r\n      prevLikedRedditPosts.filter((post) => post.id !== postId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {ShowFetchPage ? (\r\n        <div className='header'>\r\n          <div className='Header-Content'>\r\n            <h1 className='Title-Header'>{title}</h1>\r\n            <input\r\n              onChange={change}\r\n              type='text'\r\n              className='Search-Box'\r\n              placeholder='Enter a subreddit'\r\n              value={inputName}\r\n            />\r\n            <Button\r\n              classN={'Search-Button'}\r\n              text={'Retrieve top 10 posts'}\r\n              colour={'red'}\r\n              onClick={click}\r\n            />\r\n            <Button\r\n              classN={'Liked-Posts-Button'}\r\n              text={'Show liked Posts'}\r\n              colour={'white'}\r\n              onClick={changePage}\r\n            />\r\n          </div>\r\n          <div className='Reddit-Content'>\r\n            {subRedditName && (\r\n              <RedditData\r\n                subRedditName={subRedditName}\r\n                likedRedditPosts={addToLikedPosts}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <Button\r\n            className='Liked-Posts-Button'\r\n            text={'Fetch More Reddit Posts'}\r\n            colour={'white'}\r\n            onClick={changePage}\r\n          />\r\n          <div className='Reddit-Content'>\r\n            {likedRedditPosts.map((post) => (\r\n              <div key={post.id} className='reddit-post'>\r\n                <h3>Post Name: {post.title}</h3>\r\n                <p>Post ID: {post.id}</p>\r\n                {post.thumbnail !== 'self' ? (\r\n                  <img src={post.thumbnail} alt={post.title}></img>\r\n                ) : (\r\n                  <p>{post.selftext}</p>\r\n                )}\r\n                <button\r\n                  className='Remove-Liked-Post'\r\n                  onClick={() => removeLikedPost(post.id)}\r\n                >\r\n                  Remove from Liked\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: 'Reddit Hotness Grabber',\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}